// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bg-name: 'bg';
$bg-x: 0px;
$bg-y: 0px;
$bg-offset-x: 0px;
$bg-offset-y: 0px;
$bg-width: 1984px;
$bg-height: 1076px;
$bg-total-width: 3600px;
$bg-total-height: 2093px;
$bg-image: '../images/sp-common.png';
$bg: (0px, 0px, 0px, 0px, 1984px, 1076px, 3600px, 2093px, '../images/sp-common.png', 'bg', );
$bg1-name: 'bg1';
$bg1-x: 1984px;
$bg1-y: 0px;
$bg1-offset-x: -1984px;
$bg1-offset-y: 0px;
$bg1-width: 1616px;
$bg1-height: 1076px;
$bg1-total-width: 3600px;
$bg1-total-height: 2093px;
$bg1-image: '../images/sp-common.png';
$bg1: (1984px, 0px, -1984px, 0px, 1616px, 1076px, 3600px, 2093px, '../images/sp-common.png', 'bg1', );
$bg2-name: 'bg2';
$bg2-x: 0px;
$bg2-y: 1076px;
$bg2-offset-x: 0px;
$bg2-offset-y: -1076px;
$bg2-width: 1616px;
$bg2-height: 1017px;
$bg2-total-width: 3600px;
$bg2-total-height: 2093px;
$bg2-image: '../images/sp-common.png';
$bg2: (0px, 1076px, 0px, -1076px, 1616px, 1017px, 3600px, 2093px, '../images/sp-common.png', 'bg2', );
$check-name: 'check';
$check-x: 3018px;
$check-y: 1076px;
$check-offset-x: -3018px;
$check-offset-y: -1076px;
$check-width: 15px;
$check-height: 13px;
$check-total-width: 3600px;
$check-total-height: 2093px;
$check-image: '../images/sp-common.png';
$check: (3018px, 1076px, -3018px, -1076px, 15px, 13px, 3600px, 2093px, '../images/sp-common.png', 'check', );
$logo-name: 'logo';
$logo-x: 2885px;
$logo-y: 1076px;
$logo-offset-x: -2885px;
$logo-offset-y: -1076px;
$logo-width: 133px;
$logo-height: 36px;
$logo-total-width: 3600px;
$logo-total-height: 2093px;
$logo-image: '../images/sp-common.png';
$logo: (2885px, 1076px, -2885px, -1076px, 133px, 36px, 3600px, 2093px, '../images/sp-common.png', 'logo', );
$phone-name: 'phone';
$phone-x: 2885px;
$phone-y: 1112px;
$phone-offset-x: -2885px;
$phone-offset-y: -1112px;
$phone-width: 40px;
$phone-height: 37px;
$phone-total-width: 3600px;
$phone-total-height: 2093px;
$phone-image: '../images/sp-common.png';
$phone: (2885px, 1112px, -2885px, -1112px, 40px, 37px, 3600px, 2093px, '../images/sp-common.png', 'phone', );
$telephonetest-name: 'telephonetest';
$telephonetest-x: 1616px;
$telephonetest-y: 1076px;
$telephonetest-offset-x: -1616px;
$telephonetest-offset-y: -1076px;
$telephonetest-width: 1137px;
$telephonetest-height: 245px;
$telephonetest-total-width: 3600px;
$telephonetest-total-height: 2093px;
$telephonetest-image: '../images/sp-common.png';
$telephonetest: (1616px, 1076px, -1616px, -1076px, 1137px, 245px, 3600px, 2093px, '../images/sp-common.png', 'telephonetest', );
$telephonetest2-name: 'telephonetest2';
$telephonetest2-x: 1616px;
$telephonetest2-y: 1321px;
$telephonetest2-offset-x: -1616px;
$telephonetest2-offset-y: -1321px;
$telephonetest2-width: 1129px;
$telephonetest2-height: 242px;
$telephonetest2-total-width: 3600px;
$telephonetest2-total-height: 2093px;
$telephonetest2-image: '../images/sp-common.png';
$telephonetest2: (1616px, 1321px, -1616px, -1321px, 1129px, 242px, 3600px, 2093px, '../images/sp-common.png', 'telephonetest2', );
$terminal-name: 'terminal';
$terminal-x: 2753px;
$terminal-y: 1076px;
$terminal-offset-x: -2753px;
$terminal-offset-y: -1076px;
$terminal-width: 132px;
$terminal-height: 117px;
$terminal-total-width: 3600px;
$terminal-total-height: 2093px;
$terminal-image: '../images/sp-common.png';
$terminal: (2753px, 1076px, -2753px, -1076px, 132px, 117px, 3600px, 2093px, '../images/sp-common.png', 'terminal', );
$spritesheet-width: 3600px;
$spritesheet-height: 2093px;
$spritesheet-image: '../images/sp-common.png';
$spritesheet-sprites: ($bg, $bg1, $bg2, $check, $logo, $phone, $telephonetest, $telephonetest2, $terminal, );
$spritesheet: (3600px, 2093px, '../images/sp-common.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
