// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-name: 'arrow';
$arrow-x: 1130px;
$arrow-y: 1053px;
$arrow-offset-x: -1130px;
$arrow-offset-y: -1053px;
$arrow-width: 48px;
$arrow-height: 65px;
$arrow-total-width: 1616px;
$arrow-total-height: 1287px;
$arrow-image: '../images/sp-common.png';
$arrow: (1130px, 1053px, -1130px, -1053px, 48px, 65px, 1616px, 1287px, '../images/sp-common.png', 'arrow', );
$bg-name: 'bg';
$bg-x: 0px;
$bg-y: 0px;
$bg-offset-x: 0px;
$bg-offset-y: 0px;
$bg-width: 1616px;
$bg-height: 1017px;
$bg-total-width: 1616px;
$bg-total-height: 1287px;
$bg-image: '../images/sp-common.png';
$bg: (0px, 0px, 0px, 0px, 1616px, 1017px, 1616px, 1287px, '../images/sp-common.png', 'bg', );
$check-name: 'check';
$check-x: 1263px;
$check-y: 1017px;
$check-offset-x: -1263px;
$check-offset-y: -1017px;
$check-width: 15px;
$check-height: 13px;
$check-total-width: 1616px;
$check-total-height: 1287px;
$check-image: '../images/sp-common.png';
$check: (1263px, 1017px, -1263px, -1017px, 15px, 13px, 1616px, 1287px, '../images/sp-common.png', 'check', );
$glow-2-name: 'glow-2';
$glow-2-x: 226px;
$glow-2-y: 1017px;
$glow-2-offset-x: -226px;
$glow-2-offset-y: -1017px;
$glow-2-width: 240px;
$glow-2-height: 251px;
$glow-2-total-width: 1616px;
$glow-2-total-height: 1287px;
$glow-2-image: '../images/sp-common.png';
$glow-2: (226px, 1017px, -226px, -1017px, 240px, 251px, 1616px, 1287px, '../images/sp-common.png', 'glow-2', );
$glow-bg-name: 'glow-bg';
$glow-bg-x: 466px;
$glow-bg-y: 1017px;
$glow-bg-offset-x: -466px;
$glow-bg-offset-y: -1017px;
$glow-bg-width: 322px;
$glow-bg-height: 182px;
$glow-bg-total-width: 1616px;
$glow-bg-total-height: 1287px;
$glow-bg-image: '../images/sp-common.png';
$glow-bg: (466px, 1017px, -466px, -1017px, 322px, 182px, 1616px, 1287px, '../images/sp-common.png', 'glow-bg', );
$glow-name: 'glow';
$glow-x: 788px;
$glow-y: 1017px;
$glow-offset-x: -788px;
$glow-offset-y: -1017px;
$glow-width: 210px;
$glow-height: 179px;
$glow-total-width: 1616px;
$glow-total-height: 1287px;
$glow-image: '../images/sp-common.png';
$glow: (788px, 1017px, -788px, -1017px, 210px, 179px, 1616px, 1287px, '../images/sp-common.png', 'glow', );
$glow2-name: 'glow2';
$glow2-x: 0px;
$glow2-y: 1017px;
$glow2-offset-x: 0px;
$glow2-offset-y: -1017px;
$glow2-width: 226px;
$glow2-height: 270px;
$glow2-total-width: 1616px;
$glow2-total-height: 1287px;
$glow2-image: '../images/sp-common.png';
$glow2: (0px, 1017px, 0px, -1017px, 226px, 270px, 1616px, 1287px, '../images/sp-common.png', 'glow2', );
$logo-name: 'logo';
$logo-x: 1130px;
$logo-y: 1017px;
$logo-offset-x: -1130px;
$logo-offset-y: -1017px;
$logo-width: 133px;
$logo-height: 36px;
$logo-total-width: 1616px;
$logo-total-height: 1287px;
$logo-image: '../images/sp-common.png';
$logo: (1130px, 1017px, -1130px, -1017px, 133px, 36px, 1616px, 1287px, '../images/sp-common.png', 'logo', );
$phone-name: 'phone';
$phone-x: 1178px;
$phone-y: 1053px;
$phone-offset-x: -1178px;
$phone-offset-y: -1053px;
$phone-width: 40px;
$phone-height: 37px;
$phone-total-width: 1616px;
$phone-total-height: 1287px;
$phone-image: '../images/sp-common.png';
$phone: (1178px, 1053px, -1178px, -1053px, 40px, 37px, 1616px, 1287px, '../images/sp-common.png', 'phone', );
$terminal-name: 'terminal';
$terminal-x: 998px;
$terminal-y: 1017px;
$terminal-offset-x: -998px;
$terminal-offset-y: -1017px;
$terminal-width: 132px;
$terminal-height: 117px;
$terminal-total-width: 1616px;
$terminal-total-height: 1287px;
$terminal-image: '../images/sp-common.png';
$terminal: (998px, 1017px, -998px, -1017px, 132px, 117px, 1616px, 1287px, '../images/sp-common.png', 'terminal', );
$spritesheet-width: 1616px;
$spritesheet-height: 1287px;
$spritesheet-image: '../images/sp-common.png';
$spritesheet-sprites: ($arrow, $bg, $check, $glow-2, $glow-bg, $glow, $glow2, $logo, $phone, $terminal, );
$spritesheet: (1616px, 1287px, '../images/sp-common.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
